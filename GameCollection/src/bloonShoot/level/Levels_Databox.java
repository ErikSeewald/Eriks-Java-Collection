package bloonShoot.level;

public class Levels_Databox
{
	public static final int CELL_COUNT = 1008;
	
	public static byte[] loadLevel(int levelNum)
	{
		if (levelNum < 1 || levelNum > LEVELS.length) {return null;}
		
		short[] level = LEVELS[levelNum-1];		//compressed data
		byte[] level_raw = new byte[CELL_COUNT]; //raw data
		
		int rawIndex = 0;
		
		for (int i = 0; i < level.length; i++)
		{
			int insert = 0, amount = level[i];
			
			if (level[i] < 0) {amount*=-1;}
			else {insert = (level[i] / 100)+1;} //assigns the number to be inserted into levelRAW per norm specified at LEVELS array
			
			int fillUpTo = rawIndex + amount;
			if (insert > 1) {fillUpTo-= (insert-1)*100;} //removes the ID indicator digit
			
			while(rawIndex < fillUpTo )
			{level_raw[rawIndex] = (byte) insert; rawIndex++;}	
		}
		return level_raw;
	}
	
	//-30 -> 30 zeros | 30 -> 30 ones | 130 -> 30 twos
	private static final short[][] LEVELS =
	{
		//LEVEL 1
		{
			-225, 17, -25, 17, -25, 17, -25, 17, -25, 17, -25, 17, -25, 17, -25, 17, -25, 17, -25, 17, -25, 17, -25, 17,
		},
			
		//LEVEL 2
		{
			-265, 11, -31, 11, -31, 11, -31, 11, -31, 11, -31,  11, -80, 11, -31, 11, -31, 11, -31, 11, -31, 11, -31,  11,
		},
		
		//LEVEL 3
		{
			-154, 3, -37, 7, -34, 9, -32, 11, -23, 3, -4, 13, -21, 5, -2, 15, -19, 7, -1, 15, -17, 1, -1, 24, -15, 27, -16, 1, -1, 
			24, -18, 7, -1, 15, -20, 5, -2, 15, -21, 3, -4, 13, -30, 11, -32, 9, -34, 7, -37, 3
				
		},
		
		//LEVEL 4
		{
			-222, 107, -14, 102, -19, 107, -7, 1, -6, 102, -19, 102, -12, 1, -6, 102, -19, 102, -11, 3, -5, 102, -19, 102, -10, 5, -4, 102, 
			-19, 102, -8, 9, -2, 102, -19, 102, -10, 5, -4, 102, -32, 3, -5, 102, -33, 1, -6, 102, -33, 1, -2, 106, -25, 102, -9, 106, 
			-25, 102, -40, 102, -40, 102, -40, 102, -40, 106, -36, 106,
		},
		
		//LEVEL 5
		{
			-100, 201, -41, 201, 6, -36, 6, -36 , 6, -36, 6, -8, 201, -27, 6, -8, 201, -26, 201, 6, -8, 201, -26, 201, 6, -8, 201, -26, 
			201, -14, 201, -26, 201, -14, 201, -30, 6, 5, 201, -30, 6, 5, 201, -30, 6, 5, 201, -30, 6, 5, 201, -41, 201, -41, 201, -32, 210
		},
		
		//LEVEL 6
		{
			-226, 101, -37, 4, 101, -37, 4, 101, -37, 4, 101, -35, 107, -44, 4, -38, 4, -38, 4, -8, 4, -38, 4, -24, 207, -7, 4, -65, 101, 
			-13, 207, -21, 101, -41, 101, -5, 4, -32, 101, 101, -5, 4, -32, 101, 101, -5, 4, -32, 101,
		},
		
		//LEVEL 7
		{
			-275, 201, 3, 201, -37, 201, 3, 201, -37, 201, 3, 201, -37, 201, 3, 201,  -37, 201, 3, 201, -37, 201, 3, 201, -37, 201, 3, 201,
			 -37, 201, 3, 201, -37, 201, 3, 201, -37, 201, 3, 201, -37, 201, 3, 201, -37, 201, 3, 201, -37, 201, 3, 201, -37, 201, 3, 201
		},
		
		//LEVEL 8
		{
			-302, 6, -35, 6, -35,  6, -35,  6, -158, 316 		
		},
		
		//LEVEL 9
		{
			-182, 116, -67, 301, -15, 201, -25, 301, -1, 3, -11, 201, -25, 301, -1, 3, -11, 201, -25, 301, -1, 3, -7, 3, -1, 201, -25, 301,
			-11, 3, -1, 201, -25, 301, -5, 3, -3, 3, -1, 201, -26, -5, 3, -7, 201, -26, 204, 305, 206, -29, 201, -41, 201, -41, 201, -1, 4,
			-36, 201, -1, 4, -36, 201, -1, 4, -36, 206
		},
		
		//LEVEL 10
		{
			-310, 5, -37, 5, -37, 2, 401, 2, -37, 5, -37, 5, -46, 5, -37, 5, -37, 2, 401, 2, -37, 5, -37, 5
		},
		
		//LEVEL 11
		{
			-182, 221, -64, 301, -41, 301, -41, 301, -5, 4, -32, 301,  -5, 4, -32, 301,  -5, 4, -32, 301, -41, 301, -9, 4, -28, 301, -9, 4,
			-38, 4, -28, 102, -1, 401, 111, -26, 101, -2, 2, -37, 101, -2, 1, 401, 1, 401, 1, 401, 1, 401, 1, -30, 101, -2, 9, -30, 
			101, -2, 1, 401, 1, 401, 1, 401, 1, 401, 1, -30, 101, -2, 9
		},
		
		//LEVEL 12
		{
			-263, 201, -2, 202, -3, 203, 304, 203, -8, 201, -15, 201, -25, 201, -15, 201, -4, 202, 302, -8, 302, 202, -5, 201, -15,
			201, -4, 102, -19, 201, -15, 201, -10, 204, -11, 201, -15, 201, -2, 201, 302, 201, -2, 307,-3, 201, 302, 201,
			-3, 201, -15, 201, -5, 101, -12, 101, -6, 201, -15, 201, -25, 201, -15, 201, -4, 202, -3, 201, 301, 201, 301, 201, -3, 202, -6, 
			201, -15, 201, -11, 101, -13, 201, -15, 201, -11, 101, -13, 201, -15, 201, -1, 301, -1, 204, -1, 302, -4, 302, -1, 204, -1, 301,
			-2, 201, -15, 201, -9, 6, -10, 201, -15, 201, 1, 401, 20, 401, 2, 201, -15, 201, -4, 7, 401, 13, 201, -25, 8
		},
	};
}